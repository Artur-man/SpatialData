% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ImageArray-methods.R, R/ImageArray.R,
%   R/transformations.R
\name{metadata,ImageArray-method}
\alias{metadata,ImageArray-method}
\alias{dim,ImageArray-method}
\alias{dimnames,ImageArray-method}
\alias{[,ImageArray,ANY,ANY,ANY-method}
\alias{getArrayElement,ImageArray-method}
\alias{as.array,ImageArray-method}
\alias{aperm,ImageArray-method}
\alias{ImageArray}
\alias{ImageArray-class}
\alias{[,ImageArray-method}
\alias{coord}
\alias{coords}
\alias{transformImage}
\alias{translateImage}
\alias{scaleImage}
\alias{rotateImage}
\alias{coords,ImageArray-method}
\alias{coord,ImageArray-method}
\alias{scaleImage,ImageArray-method}
\alias{rotateImage,ImageArray-method}
\alias{translateImage,ImageArray-method}
\alias{transformImage,ImageArray-method}
\title{#' @rdname ImageArray
#' @export
setMethod("extract_array", "ImageArray", function(x, index) {
  extract_array(x@data, index)
})}
\usage{
\S4method{metadata}{ImageArray}(x)

\S4method{dim}{ImageArray}(x)

\S4method{dimnames}{ImageArray}(x)

\S4method{[}{ImageArray,ANY,ANY,ANY}(x, i, j, ..., drop = TRUE)

\S4method{getArrayElement}{ImageArray}(x, subscripts)

\S4method{as.array}{ImageArray}(x)

\S4method{aperm}{ImageArray}(a, perm)

ImageArray(data = array(), metadata = list(), ...)

\S4method{coords}{ImageArray}(x)

\S4method{coord}{ImageArray}(x, name)

\S4method{scaleImage}{ImageArray}(x, t = rep(1, length(dim(x))))

\S4method{rotateImage}{ImageArray}(x, t = 0)

\S4method{translateImage}{ImageArray}(x, t = c(0, 0))

\S4method{transformImage}{ImageArray}(x, coords)
}
\arguments{
\item{x}{An \code{ImageArray} object.}

\item{i, j}{Indices for subsetting (see \code{?base::Extract}).}

\item{...}{Further arguments to be passed to or from other methods.}

\item{drop}{Logical specifying whether or not flat
dimensions should be dropped (see \code{?base::Extract}).}

\item{subscripts}{A list of the same length as
the number of the array's dimensions.
Each entry provides the indices
in that dimensions to subset.}

\item{a}{An array-like object (see `?base::aperm`).}

\item{perm}{The subscript permutation vector (see `?base::aperm`).}

\item{data}{An \code{array} or \code{\link[S4Arrays]{Array}}.}

\item{metadata}{A \code{list}.}

\item{name}{A character string specifying the coordinate system to extract.}

\item{t}{Transformation data (see Transformations).}

\item{coords}{A character string specifying the target coordinate system.}
}
\value{
\code{ImageArray}
}
\description{
...
}
\section{Transformations}{

In the following examples, \code{ia} is a \code{\link{ImageArray}} object.
\itemize{
\item{\code{translateImage}:
  translates xy coordinates according to \code{t},
  an integer vector of length 2.
  (see \code{\link[EBImage:resize]{translate}})}
\item{\code{scaleImage}:
  scales the image to the desired dimensions,
  a numeric vector of length \code{length(dim(ia))}.
  (see \code{\link[EBImage:resize]{resize}})}
\item{\code{rotateImage}:
  rotates the image clockwise around the origin
  according to the given angle \code{t}, a scalar numeric.
  (see \code{\link[EBImage:resize]{rotate}})}
}
}

\examples{
path <- system.file("extdata", "blobs", package="SpatialData")
imgs <- file.path(path, "images", "blobs_image")
zarr <- file.path(imgs, "0")
json <- file.path(imgs, ".zattrs")

library(Rarr)
library(jsonlite)

za <- read_zarr_array(zarr)
md <- fromJSON(json)
(ia <- ImageArray(za, md))

}
\author{
Helena L. Crowell
}
