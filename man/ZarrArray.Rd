% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ZarrArray-methods.R, R/ZarrArray.R,
%   R/transformations.R
\name{channels,ImageArray-method}
\alias{channels,ImageArray-method}
\alias{metadata,ZarrArray-method}
\alias{dim,ZarrArray-method}
\alias{dimnames,ZarrArray-method}
\alias{[,ZarrArray,ANY,ANY,ANY-method}
\alias{getArrayElement,ZarrArray-method}
\alias{as.array,ZarrArray-method}
\alias{aperm,ZarrArray-method}
\alias{ZarrArray}
\alias{ZarrArray-class}
\alias{ImageArray}
\alias{ImageArray-class}
\alias{LabelArray}
\alias{LabelArray-class}
\alias{[,ZarrArray-method}
\alias{channels}
\alias{coord}
\alias{coords}
\alias{transformImage}
\alias{translateArray}
\alias{scaleArray}
\alias{rotateArray}
\alias{transformArray}
\alias{alignElements}
\alias{coords,ZarrArray-method}
\alias{coord,ZarrArray-method}
\alias{coord,ShapeFrame-method}
\alias{scaleArray,ZarrArray-method}
\alias{scaleFrame,ShapeFrame-method}
\alias{rotateArray,ZarrArray-method}
\alias{translateArray,ZarrArray-method}
\alias{transformArray,ZarrArray-method}
\alias{alignElements,ANY-method}
\title{#' @rdname ZarrArray
#' @export
setMethod("extract_array", "ZarrArray", function(x, index) {
  extract_array(x@data, index)
})}
\usage{
\S4method{channels}{ImageArray}(x)

\S4method{metadata}{ZarrArray}(x)

\S4method{dim}{ZarrArray}(x)

\S4method{dimnames}{ZarrArray}(x)

\S4method{[}{ZarrArray,ANY,ANY,ANY}(x, i, j, ..., drop = TRUE)

\S4method{getArrayElement}{ZarrArray}(x, subscripts)

\S4method{as.array}{ZarrArray}(x)

\S4method{aperm}{ZarrArray}(a, perm)

ZarrArray(data = array(), metadata = list(), ...)

ImageArray(data = array(), metadata = list(), ...)

LabelArray(data = array(), metadata = list(), ...)

\S4method{coords}{ZarrArray}(x)

\S4method{coord}{ZarrArray}(x, name = 1)

\S4method{coord}{ShapeFrame}(x, name = 1)

\S4method{scaleArray}{ZarrArray}(x, t = rep(1, length(dim(x))))

\S4method{scaleFrame}{ShapeFrame}(x, t = c(1, 1))

\S4method{rotateArray}{ZarrArray}(x, t = 0)

\S4method{translateArray}{ZarrArray}(x, t = c(0, 0))

\S4method{transformArray}{ZarrArray}(x, coord = NULL)

\S4method{alignElements}{ANY}(..., coord = NULL)
}
\arguments{
\item{x}{An \code{ImageArray} object.}

\item{i, j}{Indices for subsetting (see \code{?base::Extract}).}

\item{...}{Further arguments to be passed to or from other methods.}

\item{drop}{Logical specifying whether or not flat
dimensions should be dropped (see \code{?base::Extract}).}

\item{subscripts}{A list of the same length as
the number of the array's dimensions.
Each entry provides the indices
in that dimensions to subset.}

\item{a}{An array-like object (see `?base::aperm`).}

\item{perm}{The subscript permutation vector (see `?base::aperm`).}

\item{data}{An \code{array} or \code{\link[S4Arrays]{Array}}.}

\item{metadata}{A \code{list}.}

\item{name}{A character string specifying the coordinate system to extract.}

\item{t}{Transformation data (see Transformations).}

\item{coord}{A character string specifying the target coordinate system.}
}
\value{
\code{ImageArray}
}
\description{
...
}
\section{Transformations}{

In the following examples, \code{ia} is a \code{\link{ImageArray}} object.
\itemize{
\item{\code{translateArray}:
  translates xy coordinates according to \code{t},
  an integer vector of length 2.
  (see \code{\link[EBImage:resize]{translate}})}
\item{\code{scaleImage}:
  scales the image to the desired dimensions,
  a numeric vector of length \code{length(dim(ia))}.
  (see \code{\link[EBImage:resize]{resize}})}
\item{\code{rotateImage}:
  rotates the image clockwise around the origin
  according to the given angle \code{t}, a scalar numeric.
  (see \code{\link[EBImage:resize]{rotate}})}
}
}

\examples{
path <- system.file("extdata", "blobs", package="SpatialData")
imgs <- file.path(path, "images", "blobs_image")
zarr <- file.path(imgs, "0")
json <- file.path(imgs, ".zattrs")

library(Rarr)
library(jsonlite)

za <- read_zarr_array(zarr)
md <- fromJSON(json)
(ia <- ImageArray(za, md))

}
\author{
Helena L. Crowell
}
